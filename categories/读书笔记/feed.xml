<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>读书笔记 on CoderZh Blog</title>
    <link>https://blog.coderzh.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 读书笔记 on CoderZh Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2017. All rights reserved.  &lt;a href=&#39;https://beian.miit.gov.cn/&#39;&gt;粤ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 13 Feb 2022 23:57:31 +0800</lastBuildDate>
    
	<atom:link href="https://blog.coderzh.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>奈飞文化震撼到我了</title>
      <link>https://blog.coderzh.com/2022/02/13/netflix/</link>
      <pubDate>Sun, 13 Feb 2022 23:57:31 +0800</pubDate>
      
      <guid>https://blog.coderzh.com/2022/02/13/netflix/</guid>
      <description>书名：《奈飞文化手册》 作者：帕蒂·麦考德 出版时间：2018-10 春节假期的一个下午，和往常一样，我在微信读书里随意翻着推荐的书单。有一本书映</description>
    </item>
    
    <item>
      <title>真正的黑客</title>
      <link>https://blog.coderzh.com/2016/10/16/real-hacker/</link>
      <pubDate>Sun, 16 Oct 2016 21:55:45 +0800</pubDate>
      
      <guid>https://blog.coderzh.com/2016/10/16/real-hacker/</guid>
      <description>当听到「黑客」一词时，你的第一反应是什么？是行为古怪，专门通过计算机干坏事的坏蛋，还是深藏不漏令人敬仰的技术大神。我们从小形成的固有观点认为</description>
    </item>
    
    <item>
      <title>马斯克的冒险</title>
      <link>https://blog.coderzh.com/2016/06/05/elon-musk/</link>
      <pubDate>Sun, 05 Jun 2016 14:16:25 +0800</pubDate>
      
      <guid>https://blog.coderzh.com/2016/06/05/elon-musk/</guid>
      <description>埃隆·马斯克（Elon Musk）出生在一个冒险家庭。他的外祖父约书亚就是个不折不扣的冒险家。在约书亚 7 岁时父亲就去世了，于是他便维持起了家里</description>
    </item>
    
    <item>
      <title>游戏必将改变世界</title>
      <link>https://blog.coderzh.com/2016/05/29/game-changed-world/</link>
      <pubDate>Sun, 29 May 2016 00:28:18 +0800</pubDate>
      
      <guid>https://blog.coderzh.com/2016/05/29/game-changed-world/</guid>
      <description>有一项活动，它人为的制作了种种不必要的障碍，而你却自愿参与，即使过程需要花费大量时间，艰苦的工作，但是你却依然乐在其中。 这项活动叫：游戏。 我</description>
    </item>
    
    <item>
      <title>7-Eleven 零售的哲学</title>
      <link>https://blog.coderzh.com/2016/04/10/7-eleven/</link>
      <pubDate>Sun, 10 Apr 2016 21:57:06 +0800</pubDate>
      
      <guid>https://blog.coderzh.com/2016/04/10/7-eleven/</guid>
      <description>&lt;p&gt;1956 年 4 月，有为青年「铃木敏文」大学毕业，进入东京出版贩卖公司，从「退货负责人」到「出版科学研究所」，再到宣传部杂志「编辑」，生活过的充实有趣。在三十岁之际，铃木打算不依靠公司，以自身的力量制作一个独立的电视节目。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>《必然》读书笔记之 - 知化Cognifying</title>
      <link>https://blog.coderzh.com/2016/02/21/inevitable-cognifying/</link>
      <pubDate>Sun, 21 Feb 2016 19:05:10 +0800</pubDate>
      
      <guid>https://blog.coderzh.com/2016/02/21/inevitable-cognifying/</guid>
      <description>&lt;p&gt;2002 年左右，KK 参加了谷歌的一个小型聚会，当时谷歌还是一个家专注搜索的小公司。KK 问拉里·佩奇「已经有这么多家搜索公司，干嘛还要做免费网络搜索？」&lt;/p&gt;
&lt;p&gt;佩奇回答说：「哦，我们其实是在做人工智能。」&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>张小龙悟透《失控》做出了微信，我们看过了《必然》能做什么？</title>
      <link>https://blog.coderzh.com/2016/01/31/inevitable/</link>
      <pubDate>Sun, 31 Jan 2016 12:22:25 +0800</pubDate>
      
      <guid>https://blog.coderzh.com/2016/01/31/inevitable/</guid>
      <description>&lt;p&gt;凯文凯利在 20 多年前在《失控》一书中预言了人类的未来的科技、社会和经济，现今的万维网、博客、维基百科、无人驾驶、电子货币、去中心化等等，都在上个世纪 90 年代被 KK 成功预言，而他在写《失控》一书时，还没有万维网，因特网才刚刚进入实用阶段。&lt;/p&gt;
&lt;p&gt;微信之父张小龙很早前就读过了《失控》，在他最近被爆出来的饭否日记中，他这么写到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;再问有多少人看了失控，无人。我顿时将自己想象为KK而口若悬河了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2011-01-13 17:42 by gzallen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;张小龙非常推崇《失控》中提到的 &lt;strong&gt;去中心化&lt;/strong&gt; 的思想，这点在微信公众号和朋友圈都有体现。比如并没有一个中心化的公众号列表入口，展示最新最热的公众号文章。每个公众号主只与关注者互相连接，用户与用户之间互相连接，好的内容可以在用户之间以几何倍数的传播。又比如前几天的朋友圈红包照片功能，瞬间引爆了朋友圈。&lt;/p&gt;
&lt;p&gt;《失控》这本书很厚，而且里面的内容需要花大量的时间去理解和琢磨。本文的标题纯粹是为了吸引眼球，因为并不能得出这样的结论：悟透了《失控》就一定能做出像微信这样牛逼的产品。更加现实的是，即使看过了《必然》，我们大多数人什么也做不出来。&lt;/p&gt;
&lt;p&gt;但是看这两本书，有助于你了解人类未来的科技趋势。正如罗振宇所说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个时代最悲哀的事情，就是——&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;你努力，但你不在风口上，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;你聪明，但你不在潮流中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;知道趋势，意味着已经胜利在望。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;《失控》中预言的很多科技虽然现在已经发生，而在某些领域，比如人工生命、机器人技术、生态学、仿真学等领域，并没有出现新的重大思想。正如他在《必然》中的 &lt;strong&gt;形成(Becomming)&lt;/strong&gt; 中提到的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;未来的大部分运转人类生活的伟大产品，在 2016 年以前，都还没被发明出来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们目睹了从 PC 时代到互联网时代，再到现在的移动互联网时代的转变过程。我们正处于形成的过程中，所以我们感觉不到变化。你今天后悔当初为什么没有和张小龙想到一块去。再过几年十几年，你同样也会感叹，我要是在当时就意识到有那么多可能性该多好啊！&lt;/p&gt;
&lt;p&gt;设想未来你的孙子问你，「爷爷，为什么你年轻的时候马桶还不会说话，裤子还需要手来脱，打字还需要键盘，甚至显示屏幕还要放一个笨重的显示器，你居然还在桌子上放两个？！你当时没想到需要做点什么吗？」&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以，不要再感叹强大的 BAT 已经垄断市场，未来更大的机会正在发生甚至还未被挖掘，把握最佳的时机，就是现在！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有时候我们察觉不到变化，有时候其实是因为并不认可这样的变化，当变化已经形成时却又追悔莫及。所以，我们需要抛弃成见，拥抱变化。&lt;strong&gt;看准方向，找对风口，努力去飞&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;有句话叫：风口上的猪也会飞。其实我并不认可这句话。说现实一点，想让猪飞起来，那得是多大的风啊！真有这样一个好的风口，聪明的人早已经把猪赶到不知道哪里去了，还有猪什么事。真正厉害的不是猪，而是扇风的人。有一句话说的好，「为了这些猪，我没少扇多少风。」&lt;/p&gt;
&lt;p&gt;所以，我对于 &lt;strong&gt;形成&lt;/strong&gt; 的理解是，深刻理解形成的本质，抓住最好的时机，付出持续的努力，遇到反对时能够坚定，遇到挫折时能够总结，跌倒时想着爬起来怎样继续前进。有一天你也许功成名就，也许一事无成。但这有什么关系呢，放眼到整个人类社会，&lt;strong&gt;形成&lt;/strong&gt; 的趋势并不因你而左右，你会感激形成的过程中创造出来的种种机会。&lt;/p&gt;
&lt;p&gt;《必然》这本书一共有 12 个关键词，每个关键词都需要深入的思考。我也感觉到一篇苍白无力的读后感是无法总结这本有深度的书，所以一篇文章聊其中一个关键词已经足够。下次我们再来聊聊下个关键词「&lt;strong&gt;知化(Cognifying)&lt;/strong&gt;」&lt;/p&gt;
&lt;p&gt;附录：&lt;/p&gt;
&lt;p&gt;《必然》十二个关键词：形成、知化、流动、屏读、使用、共享、过滤、重混、互动、追踪、提问、开始。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一篇文章了解什么是增长黑客</title>
      <link>https://blog.coderzh.com/2015/10/17/read-growth-hacker/</link>
      <pubDate>Sat, 17 Oct 2015 10:16:41 +0800</pubDate>
      
      <guid>https://blog.coderzh.com/2015/10/17/read-growth-hacker/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://image.coderzh.com/GrowthHacker.jpg-wt&#34; alt=&#34;GrowthHacker&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>最近读的几本书</title>
      <link>https://blog.coderzh.com/2015/08/16/Books/</link>
      <pubDate>Sun, 16 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2015/08/16/Books/</guid>
      <description>&lt;p&gt;由于我住的比较远，每天上下班单程需要1个半小时左右。因此，车上和地铁的时间成了我每天阅读的时间。&lt;/p&gt;
&lt;p&gt;下面几本是我最近读过的书，分享一下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>读《程序员的思维训练》</title>
      <link>https://blog.coderzh.com/2015/05/16/ThinkingAndLearning/</link>
      <pubDate>Sat, 16 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2015/05/16/ThinkingAndLearning/</guid>
      <description>&lt;p&gt;《程序员的思维修炼:开发认知潜能的九堂课》 从程序员的角度去认清自己，思考问题，了解我们的大脑，进而发掘潜能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>成大事者不纠结</title>
      <link>https://blog.coderzh.com/2015/04/26/Category/</link>
      <pubDate>Sun, 26 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2015/04/26/Category/</guid>
      <description>&lt;p&gt;最近在看罗振宇的《成大事者不纠结》，想想自己平时有什么纠结的事情，当我打开为知笔记看着长长的文件夹分类时，我明白了，其实我一直纠结着“分类”。我有一定的分类整理的习惯，当然也不是特别强迫的那种。比如，记录技术文章时，我会分出：C++，Python，Cocos2d-x，GameServer，Linux，……等等，甚至还会分出若干的二级分类。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>读《从0到1》</title>
      <link>https://blog.coderzh.com/2015/04/20/ZeroToOne/</link>
      <pubDate>Mon, 20 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2015/04/20/ZeroToOne/</guid>
      <description>&lt;p&gt;自从入手了Kindle Paper White，现在已经习惯了在Kindle上购买图书了，已经买了好几本了。在Kindle上读书体验就是好啊，自己也变得越来越爱读书了。呵呵。&lt;/p&gt;
&lt;p&gt;利用周末和平时闲暇时间，把《从0到1:开启商业与未来的秘密》读了一遍，书中很多观点不错，耐人深思，记录一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>《黑客与画家》杂想</title>
      <link>https://blog.coderzh.com/2015/03/01/HackerAndPainter/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2015/03/01/HackerAndPainter/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://image.coderzh.com/hackerspainters.jpg&#34; alt=&#34;HackersAndPainters&#34;&gt;&lt;/p&gt;
&lt;p&gt;春节前，入手了个Kindle PaperWhite。之前一直担心Pad看书已经够用了，实际用下来，发现看书还是用Kindle好。因为Kindle能让你专心看书，不易伤眼，而且续航时间很长。&lt;/p&gt;
&lt;p&gt;之前一直想读《黑客与画家》，于是春节假期用Kindle把它读完。这本书备受赞誉，里面很多观点很好，但是我读下来，高预期之后还是有些落差。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>《xUnit Test Patterns》学习笔记7(完) - 总结</title>
      <link>https://blog.coderzh.com/2010/02/07/xUnit-Test-Patterns7-End/</link>
      <pubDate>Sun, 07 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/02/07/xUnit-Test-Patterns7-End/</guid>
      <description>总体来说，这本书是不错的。后面的第二部分和第三部分，主要针对Test Smells和Test Patterns进行了更加具体的描述，主要的内容和</description>
    </item>
    
    <item>
      <title>《xUnit Test Patterns》学习笔记6 - Test Double</title>
      <link>https://blog.coderzh.com/2010/01/31/xUnit-Test-Patterns6-Test-Double/</link>
      <pubDate>Sun, 31 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/01/31/xUnit-Test-Patterns6-Test-Double/</guid>
      <description>我不知道Test Double翻译成中文是什么，测试替身？Test Double就像是陈龙大哥电影里的替身，起到以假乱真的作用。在单元测试时，使</description>
    </item>
    
    <item>
      <title>《xUnit Test Patterns》学习笔记5 - xUnit基础</title>
      <link>https://blog.coderzh.com/2010/01/24/xUnit-Test-Patterns-5/</link>
      <pubDate>Sun, 24 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/01/24/xUnit-Test-Patterns-5/</guid>
      <description>这几节我看的比较快一些，因为内容之间其实是有联系的，所以合在一起做一个笔记。6-10节主要介绍了什么是Fixture，如何保证一个Fresh</description>
    </item>
    
    <item>
      <title>《xUnit Test Patterns》学习笔记4 - Principles of Test Automation</title>
      <link>https://blog.coderzh.com/2010/01/23/xUnit-Test-Patterns-4/</link>
      <pubDate>Sat, 23 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/01/23/xUnit-Test-Patterns-4/</guid>
      <description>自动化测试过程中，有一些基本的原则，就如同宣言(Manifesto)。由于大部分的原则在前面其实都提到的，因此，有的不做太多说明了。 原则：W</description>
    </item>
    
    <item>
      <title>《xUnit Test Patterns》学习笔记系列</title>
      <link>https://blog.coderzh.com/2010/01/23/xUnit-Test-Patterns/</link>
      <pubDate>Sat, 23 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/01/23/xUnit-Test-Patterns/</guid>
      <description>《xUnit Test Patterns》学习笔记1 - Test Smell 《xUnit Test Patterns》学习笔记2 - Goal Of Test Automation 《xUnit Test Patterns》学习笔记</description>
    </item>
    
    <item>
      <title>《xUnit Test Patterns》学习笔记3 - Philosophy of Test Automation</title>
      <link>https://blog.coderzh.com/2010/01/21/xUnit-Test-Patterns-3/</link>
      <pubDate>Thu, 21 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/01/21/xUnit-Test-Patterns-3/</guid>
      <description>这一章主要讲自动化测试的原则。前面的章节介绍了很多测试的思想，而思想的东西难免有点虚，这一章就是告诉你，遇到了具体的什么问题时，应该怎么办。</description>
    </item>
    
    <item>
      <title>《xUnit Test Patterns》学习笔记2 - Goal Of Test Automation</title>
      <link>https://blog.coderzh.com/2010/01/18/xUnit-Test-Patterns-2/</link>
      <pubDate>Mon, 18 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/01/18/xUnit-Test-Patterns-2/</guid>
      <description>或许有人觉得单元测试可有可无，因为觉得需要付出太多的精力，而客户并不需要它。这就涉及到投资回报率的问题，其实所付出的用于测试的投资，往往会收</description>
    </item>
    
    <item>
      <title>《xUnit Test Patterns》学习笔记1 - Test Smell</title>
      <link>https://blog.coderzh.com/2010/01/17/xUnit-Test-Patterns-1/</link>
      <pubDate>Sun, 17 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/01/17/xUnit-Test-Patterns-1/</guid>
      <description>这本书找来很久了，一直没读。关于软件测试的好书相当少，对于测试代码的重构及模式的书就更加难得了。虽然我才读了前几章，给我的感受是，这本书确实</description>
    </item>
    
    <item>
      <title>《深入浅出JavaScript》学习笔记</title>
      <link>https://blog.coderzh.com/2010/01/02/1637943/</link>
      <pubDate>Sat, 02 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2010/01/02/1637943/</guid>
      <description>有一个与Script相反的标签: noscript，用于在javascript不可用时显示内容。 分号是可选的，但最好使用它。 大括号后面不需要使</description>
    </item>
    
    <item>
      <title>《微软的软件测试之道》(How We Test Software at Microsoft)</title>
      <link>https://blog.coderzh.com/2009/10/02/1577396/</link>
      <pubDate>Fri, 02 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2009/10/02/1577396/</guid>
      <description>好早就下了英文电子版，一直没有看，如今中文版已经出来并且已经可以买到了，准备入手一本。 [温馨提示]：该文章由原博客园导入而来，如排版效果不佳</description>
    </item>
    
    <item>
      <title>期待《 Beautiful Testing 》( 测试之美 )</title>
      <link>https://blog.coderzh.com/2009/07/22/1528249/</link>
      <pubDate>Wed, 22 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2009/07/22/1528249/</guid>
      <description>之前看过《Beautiful Code》，相当不错。今天在testingreflections里看到Karen N. Johnson发的一篇文章，说</description>
    </item>
    
    <item>
      <title>程序员的共鸣 - 读《卓有成效的程序员》</title>
      <link>https://blog.coderzh.com/2009/07/18/1526082/</link>
      <pubDate>Sat, 18 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.coderzh.com/2009/07/18/1526082/</guid>
      <description>最近读了《卓有成效的程序员》，感觉收获颇大。这是一本写给程序员的难得的好书。书中大都是一些浅显的道理，但作者将这些东西加以收集、归纳、总结，</description>
    </item>
    
  </channel>
</rss>