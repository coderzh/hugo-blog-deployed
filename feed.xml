<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>一个程序员的思考</title>
        <link>https://blog.coderzh.com/feed.xml</link>
        <language>zh-CN</language>
        <author>CoderZh</author>
        <rights>Copyright (c) 2015, CoderZh; all rights reserved.</rights>
        <updated>Fri, 01 Jan 2021 23:35:23 CST</updated>
        
        <item>
            <title>2020</title>
            <link>https://blog.coderzh.com/2021/01/01/2020/</link>
            <pubDate>Fri, 01 Jan 2021 23:35:23 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2021/01/01/2020/</guid>
            <description>&lt;p&gt;2020 是神奇的一年，仿佛一转眼之间，它又这么过去了。春节期间疫情爆发，武汉封城，恐慌加剧，各地开始限制出入，口罩难求，于是春节我们选择了没回老家。由于疫情影响，春节假期延长到 18天，之后开始远程办公，国内疫情逐渐得到控制，2月底开始复工。全球疫情加剧，3 月份美股 10 天内触发 4 次熔断，恐慌情绪蔓延全球。美国直到现在，疫情都没有控制住，每日新增约 20w。全球开始放水，美股随后一路狂奔，创出历史新高。中国一线城市房价一路猛涨。中间还有戏剧性的美国大选反转又反转。2020 真是不可谓不疯狂。&lt;/p&gt;
&lt;p&gt;这些总归是大局，最关键的还是你我，今年过的好不好，身体好不好，赚没赚到钱，股票有没有抓住机会，房子有没有抢到，学习、事业有没有进步。当然，最关键的还是心态。那些赚到的，亏掉的，错过的，也就这样吧。身体健康才是最重要的，阖家欢乐才是最可贵的，永远保持对未来的美好期望，全力以赴，才是最重要的。&lt;/p&gt;
&lt;h3 id=&#34;读书&#34;&gt;读书&lt;/h3&gt;
&lt;p&gt;每年的总结，我都将读书放在第一位。因为我觉得现在能静下心来读完一本书，已经是不容易的一件事。你需要排除掉外界的影响，内心的躁动，安安静静的阅读一个个静止的文字，并感受到文字里面的风云变幻与狂热躁动。仿佛你已是上帝视角，对书里的世界笑看风云，回过神来，对现实的世界也能坦然自若。&lt;/p&gt;
&lt;p&gt;2020 年我买了一台 BOOX Note2 电纸书，使用感受非常好，非常值。我在上面读完了整套《明朝那些事》，用时 62小时。我读书不快，过去我对阅读速度有些在意，现在觉得已经不重要了。因为有些书，细品慢读对我来说，也许才能真正享受到书籍本身。比如最近我重读《三体》，我刻意一字一字细看。看完和看多少，不是目的，过程才最重要。&lt;/p&gt;
&lt;p&gt;2020 我的年度书，我要给到两本：《明朝那些事》和《知行合一王阳明》。前一部不用多说，经典之作，没完整看完的推荐看看。也是通过这个本书，了解到王阳明。作为一个江西人，对王阳明故事里发生的地点不能再熟悉。同时也对他的心学有了兴趣，所以目前正在看后面那本书，待我看完，看能否领悟一些吧。&lt;/p&gt;
&lt;h3 id=&#34;视频号与直播&#34;&gt;视频号与直播&lt;/h3&gt;
&lt;p&gt;年初创建了视频号：小代码，更新了几期内容：《60秒搭建Hugo静态博客》、《TypeScript工程》、《Git 学习小游戏》。后来没有再坚持，处于断更状态。龙哥说，视频号的定位，是一个人的名片。后来我也有所感受，比如视频号直播这件事，对我触动挺大。因为在我的印象中，做直播的人，应该都是一些专职主播，大V。而直播本身，是需要做大量准备，需要很正式对待的一件事。后来我发现视频号的直播不是那样，她倡导的，是一种人人都可以，一时兴起就拿起手机的直播。&lt;/p&gt;
&lt;p&gt;公司内部的一场球赛，一场位置极好的流星雨，一场十几人的技术分享，都通过视频号直播的方式轻松的进行分享。不需太在意同时观看的人数，在意的是真正懂你的人，愿意和你一起享受其过程的人。好比你刚好路过一个球场，而球场正进行一场不大不小的比赛，你凑了过去，看到一记精彩的三分球，不由的和几十围观群众鼓起掌来。现实生活中的一场小球赛，我们不会觉得几十人的观众太少。通过随手直播这场球赛，同样有几十人在线观看，相当于把几十个人拉到了比赛现场，也是不小的数目。&lt;/p&gt;
&lt;p&gt;我希望我的视频号后面更加个人化，也许哪一天，我也可以放下偶像包袱，轻松的直播写一段代码，解一个 bug，做一场分享。&lt;/p&gt;
&lt;h3 id=&#34;改变&#34;&gt;改变&lt;/h3&gt;
&lt;p&gt;虽然 2020 年很多想做的事情还没有做，但到了 2021 年，想还是要去想。&lt;/p&gt;
&lt;p&gt;改变不容易，但一个小小的改变应该不难。比如退出几个房产交流群，屏蔽几个中介，取关几个无聊节目，把时间腾出来，用到更有意义的地方。当然，2021，我希望在写作方面有更大的改变，恢复甚至超越公众号之初的更新频率，把更多的技术，思考，分享出来。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>开通了个微信视频号</title>
            <link>https://blog.coderzh.com/2020/02/10/small-code/</link>
            <pubDate>Mon, 10 Feb 2020 20:29:06 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2020/02/10/small-code/</guid>
            <description>&lt;p&gt;由于新冠病毒疫情，春节假期放了  18 天。今天开始远程工作了，由于很早之前已经试过在家办公，拉代码、编包、各种代理、远程机器啥的都不是问题。在家办公的感觉还不错，但还是希望疫情能早点过去。&lt;/p&gt;
&lt;p&gt;前两天开通了微信的视频号，名字叫：小代码。由于视频时长最长只有 60 秒，所以只能放短内容，就放一些代码片段的小 Tips 吧。虽然也不知道有没有人看，至少，自己做个记录也是不错的。&lt;/p&gt;
&lt;p&gt;说实话，第一次做视频，经验值几乎为 0。系统自带的 iMovie 就可以做视频剪辑，试了下还不错，简单的视频编辑操作已经入门了。&lt;/p&gt;
&lt;p&gt;觉得不错就点个关注吧~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.coderzh.com/smallcode.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>我的 2019</title>
            <link>https://blog.coderzh.com/2020/02/03/my-2019/</link>
            <pubDate>Mon, 03 Feb 2020 18:50:36 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2020/02/03/my-2019/</guid>
            <description>&lt;p&gt;这次的春节假期，由于武汉新型冠状病毒的影响，延期后长达了 18 天，外加一周的远程办公。感染人数还在增加，我们正以全国之力与病毒抗争，相信我们一定可以度过难关。现在离假期结束还有一周的时间，总结一下过去的 2019 吧。&lt;/p&gt;
&lt;h3 id=&#34;读书&#34;&gt;读书&lt;/h3&gt;
&lt;p&gt;2019 年纸质书只买了两本，一本是《正面管教》，教育类的书籍。另一本是《平行美利坚》，介绍当前美国的。 19 年第一次，去了趟美国，对美国的历史、文化、以及当前的现状比较感兴趣，于是找了很多美国相关的书籍，播客来听。《平行美利坚》来自听的一个播客节目：《随口说美国》。播主是一名美籍华人，身处洛杉矶，以自己的视角讲述我们关心的美国当前的点点滴滴。他的普通话并非字正腔圆，也未受过专业训练，但是吐字清晰，条理性非常强。本是金融业的佼佼者，后放弃了国内安逸、优渥的条件，决定举家前往美国。他在播客里说过，很多人都在寻找自己要干什么，而他也找到了对他来说真正有意义的事情，就是做这个播客，既能帮助到别人，也能自己从中受益。这一点让我有些触动，而我，也还在寻找中。所以买本他的书支持一下。&lt;/p&gt;
&lt;p&gt;其他书基本都是在微信读书里看完的，无限会员卡，一直无限一直爽。历史人文类的：《历史深处的忧虑：近距离看美国之一》、《总统是靠不住的：近距离看美国之二》、《我也有一个梦想：近距离看美国之三》、《如彗星划过夜空：近距离看美国之四》、《历史在你我身边》。这几本书出自林达之笔，一对美籍华人作家夫妇合用的笔名。《近距离看美国》系列可谓是经典中的经典。其他历史人文传记类：《邓小平传》、《论中国》、《在华五十年》。&lt;/p&gt;
&lt;p&gt;投资理财类：《小狗钱钱》、《财务自由之路》、《钱：7步创造终身收入》、《投资最重要的事》、《随机漫步的傻瓜》。这几本书都印象很深。这里简单摘录几段划线内容吧。&lt;/p&gt;
&lt;p&gt;《钱：7步创造终身收入》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在一段较长的持续时间里，96%的主动管理型基金未能战胜市场。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;《投资最重要的事》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你已经选定价值投资法进行投资，并且已经计算出证券或资产的内在价值，接下来还有一件重要的事：坚定地持有。因为在投资领域里，正确并不等于正确性能够被立即证实。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;人类不是被一无所知的事所累，而是被深信不疑的事所累。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;《随机漫步的傻瓜》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本书谈的主题是分明靠运气，却被误认为是凭非运气（即技术）才完成的事；以及更普遍来说，分明是随机现象，却被误认为是非随机现象（即决定论）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果失败的代价过于沉重、难以承受，那么这件事成功的概率有多高根本无关紧要。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其他书籍：《程序是怎样跑起来的》、《深入浅出 WebAssembly》、《古代人的日常生活》、《三分钟漫画汽车史》、《我是个妈妈，我需要铂金包》。&lt;/p&gt;
&lt;h3 id=&#34;代码&#34;&gt;代码&lt;/h3&gt;
&lt;p&gt;羞愧，和去年持平，希望今年能实现前年定的去年要实现的计划。&lt;/p&gt;
&lt;h3 id=&#34;工作&#34;&gt;工作&lt;/h3&gt;
&lt;p&gt;平平稳稳的一年，希望今年会有更多的突破。&lt;/p&gt;
&lt;h3 id=&#34;锻炼&#34;&gt;锻炼&lt;/h3&gt;
&lt;p&gt;一年没打乒乓球了，一年没怎么锻炼了。我也不知道咋了，就是不想动。这很不好，今年一定要改变！&lt;/p&gt;
&lt;h3 id=&#34;独立思考者&#34;&gt;独立思考者&lt;/h3&gt;
&lt;p&gt;尽力做个独立思考者，自觉自己之前做的不够，有思考，也要有决断和毅力，持之以恒的去做。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>由 QuickJS 想到的</title>
            <link>https://blog.coderzh.com/2019/07/14/quickjs/</link>
            <pubDate>Sun, 14 Jul 2019 08:31:18 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2019/07/14/quickjs/</guid>
            <description>&lt;p&gt;前几天，一个叫 &lt;code&gt;Fabrice Bellard&lt;/code&gt; 的大牛程序员发布了一个新的 JS 引擎：QuickJS，引起了业界轰动。QuickJS 的主要特点是小，嵌入式，完整支持 ES2019 语法，和其他小型嵌入式 JS 引擎比起来，速度也很快。&lt;/p&gt;
&lt;p&gt;登上大牛的主页(&lt;code&gt;https://bellard.org&lt;/code&gt;)，瞬间被惊呆了。原来之前耳熟能详的 FFMPEG、QEMU 都是出自他之手。还有一些之前闻所未闻的项目，据说这些都是大神的 Side Project。这些项目范围涉及之广让人瞠目，有涉及科学计算，提出最快速的计算圆周率的算法，并于 2009 年声称打破了圆周率计算的世界纪录，算出小数点后 2.7 万亿位，仅用一台普通个人计算机。有涉及编译器和虚拟机的，1996年，编写了一个简洁但是完整的 C 编译器和一个 Java 虚拟机 Harissa。发明的 TinyCC 是GNU/Linux 环境下最小的 ANSI C 语言编译器，是当前号称编译速度最快的 C 编译器。用 JavaScript 写的一个 PC 虚拟机 Jslinux。图形渲染相关 TinyGL，图片格式 BPG，等等……&lt;/p&gt;
&lt;p&gt;他的个人主页也很特别，没有任何 CSS 样式，也没有一张图片，只有纯文本的项目罗列和介绍，甚至没有一点关于 &lt;code&gt;About Me&lt;/code&gt; 的信息。然后，在 GitHub、Twitter、Facebook 等地方，都找不到这位神人的踪迹，不禁让人怀疑是不是一个真实存在的人，后来在 Hacker News 上有人证实了确实见过真人，更有人大声惊呼：还有 Fabrice 不能做的东西吗？看来他是一个深居简出，沉浸在代码世界而不受外界干扰的大神级程序员。&lt;/p&gt;
&lt;p&gt;这让我更加有兴趣去拜读一下他的代码了。QuickJS 的主页介绍简单明了，代码直接是一个压缩包，名字里带着创建的日期：&lt;code&gt;quickjs-2019-07-09.tar.xz&lt;/code&gt;。这大概是我在十几年前常见的代码共享的方式，而现在已经 2019 年了，大神也没有选择 GitHub 之类的开源协作的平台，甚至让我怀疑他开发过程中是不是有使用 git 之类的源代码管理工具。大神总是特立独行的，直接丢一个压缩包，大概是在说：这就是我所有代码了，有任何问题和疑问，直接给我发邮件吧，不接受任何社交媒体联系方式。&lt;/p&gt;
&lt;p&gt;我隐约觉得我的关注重点应该还是他的代码，而不是他的人，也许他本人也是这么认为的。代码解压后，代码是用 C89 写的，不是 C++，甚至不是 C99。这大概是一种技术偏执，在 C 和 C++ 中选择 C 的神级程序员也不在少数，比如开发了 skynet 的云风，还有游戏引擎大牛 Andre Weissflog。在 Andre 的 twitter 上，他贴了一条自己的编程语言使用历程：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Z80 asm =&amp;gt; 68k asm =&amp;gt; pre-C89 =&amp;gt; post-C89 =&amp;gt; C++98 =&amp;gt; C++11 =&amp;gt; C99
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;经历过 C++11 的各种便利和绚丽，最后还是返璞归真的选择了 C99，或许也给我带来了一些深层的思考：什么才是程序的本质。和 Fabrice 不同，Andre 是一个社交型程序员，甚至使得我有一种感觉，他整天都在发 twitter，但发现他的代码居然一行也没有少写。&lt;/p&gt;
&lt;p&gt;这样看来 Fabrice 选择 C89，也没有什么让人奇怪的地方了。代码解压后，自然是先编译一通。没有用 CMake，只有 MakeFile，嗯，一点问题也没有，大概我们都是被 CMake 惯坏了吧，离了它几乎都不懂得怎样编译代码了。大神总是以一种最原始最直接的方式，去组织和掌控着一切。在 linux 上，直接 make 编译，不用多长时间就顺利编过了。&lt;/p&gt;
&lt;p&gt;据说 Fabrice 是从 2017 年开启的这个 Side Project，现在的我看他的代码，由如管中窥豹，只能看到一些粗浅的东西，更多东西还得花时间细细研读。但就 QuickJS 而言，在目前的版本里，它是没有 JIT 的，所以和 Google 的 V8 性能比起来，还是有很大差距的。它将一段 JS 代码编译生成一个可执行二进制的方式，是先将 JS 编译成字节码，然后将字节码嵌入到一段 c 的代码里，然后解释执行这段字节码。&lt;/p&gt;
&lt;p&gt;比如，hello.js 代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;经过 qjsc 编译后，会生成一个这样的 hello.c 代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* File generated automatically by the QuickJS compiler. */&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;quickjs-libc.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uint32_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hello_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;87&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uint8_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x04&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x63&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x73&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x6c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x65&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x06&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x67&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x65&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x57&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x72&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x6c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x65&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x78&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x61&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x70&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x6c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x65&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x73&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x68&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x65&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x6f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x6a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x73&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x9e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x03&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xa0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x38&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0xc4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xc5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x04&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xc6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xd2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x8e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x03&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;JSRuntime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;JSContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;rt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JS_NewRuntime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JS_NewContextRaw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;JS_AddIntrinsicBaseObjects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;js_std_add_helpers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;js_std_eval_binary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hello_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;js_std_loop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;JS_FreeContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;JS_FreeRuntime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所有相关的 opcode 可以在 quickjs-opcode.h 里找到。最核心的 quickjs.c 有 47842 行。作为一个完整的 JS 引擎，代码已经是相当的精炼了，活生生的一本教科书。不过，现在的 QuickJS 在性能要求高的场景和 V8 还是没有可比性，希望这个东西不仅仅是大神闲暇之余的玩具，期待之后能带来更大的惊喜吧。&lt;/p&gt;
&lt;p&gt;有人说， Fabrice 就是 10x Engineer，即工作效率相当于 10 个程序员。立马有人站出来反对，分明是 100x Engineer 嘛。这个世界就是这样，有些人比你聪明，比你有天赋，工作效率是你的 10 倍，同时还比你努力。当你在上班划水时，他在写代码，你在吃鸡落地成盒，他又调通了一个核心模块。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>GDC2019小记（二）</title>
            <link>https://blog.coderzh.com/2019/04/01/gdc2019/2/</link>
            <pubDate>Mon, 01 Apr 2019 06:00:13 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2019/04/01/gdc2019/2/</guid>
            <description>&lt;p&gt;前面讲到了曲折的签证过程，这篇本来再打算讲讲美国的风土人情，人文历史，旧金山及周边的风貌等等。但是一想，这些东西，除非亲身经历，感受不会太深。如果想从文章或者书本中系统的了解美国这个国家，极力推荐林达的《近距离看美国》系列丛书。&lt;/p&gt;
&lt;p&gt;所以这篇，打算直接切入 GDC 主题。前面讲到，GDC 期间有大量的游戏开发者的技术分享交流。这个所谓『大量』是真的很大量！可以打开这个网址感受一下庞大的 Session 列表： &lt;a href=&#34;https://schedule.gdconf.com/pass-type/all-access&#34;&gt;https://schedule.gdconf.com/pass-type/all-access&lt;/a&gt; 持续 5 天，总共有近 800 场技术分享，每天平均有 160 场。这么多讲座，根本听不过来，所以每天都要计划好每个时间点去听哪个讲座。当然，也不是所有讲座都有权限去听的。GDC 的门票类型主要有 6 种，分别的价格也不一样：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pass Type&lt;/th&gt;
&lt;th&gt;Price($)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;All Access&lt;/td&gt;
&lt;td&gt;2399&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GDC Conference + Summits&lt;/td&gt;
&lt;td&gt;2099&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GDC Conference&lt;/td&gt;
&lt;td&gt;1449&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GDC Summits&lt;/td&gt;
&lt;td&gt;949&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expo Plus&lt;/td&gt;
&lt;td&gt;349&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expo&lt;/td&gt;
&lt;td&gt;249&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这个价格也感受一下，All Access 的门票换成人民币将近 16000 元！由于我们公司是其中的参展商（Exhibitor），所以我拿的是 Expo Plus 的通行证，有权限听的 Session 大约有 300 场。看了下感兴趣的主题基本有权限去听，也足够了。同时可以在手机上安装 GDC 的官方 APP，上面有所有的课程列表，可以定制好自己的听课计划。&lt;/p&gt;
&lt;p&gt;如果错过了某些课程，或者没有机会来到 GDC，还可以通过 GDC Vault(&lt;a href=&#34;https://www.gdcvault.com/&#34;&gt;https://www.gdcvault.com/&lt;/a&gt;) 看视频回看。&lt;/p&gt;
&lt;p&gt;我主要关心的是 Programming 类型的课程，偏游戏渲染方面的，比如：Vulkan、glTF、OpenXR，RTX、GPU 相关的。同时也了解了下 Facebook、Google 在游戏商业化上的一些策略。&lt;/p&gt;
&lt;p&gt;GDC 第二天几乎成了 Google 专场，上午由 CEO 劈柴哥亲自站台，高调宣布正式加入微软、索尼、任天堂所在价值 1400 亿美元的游戏行业。同时发布 Stadia 云游戏平台，只需要一个浏览器，就可以玩《刺客信条：奥德赛》、《毁灭战士：永恒》之类的重型游戏。 下午 Google 又包了 12:00 ~ 18:00 的场，全面系统的介绍 Stadia 平台。鉴于上午劈柴哥那场的火爆程度，我们早早就去谷歌专场排了队进场，因此也错过了同时间其他几场有意思的课程。会场展台还可以直接体验 Stadia，我试玩下奥德赛，延迟确实很低，手感也不错。&lt;/p&gt;
&lt;p&gt;但是云游戏这东西最后的落地效果怎样，还真不好说。早在 2010 年，我就浅浅的研究过这个方向，当时还写了几篇文章（可以在我的博客里找到这几篇文章）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.coderzh.com/2010/09/11/thincilent/&#34;&gt;瘦客户端那些事 - 开篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.coderzh.com/2010/09/24/thinclient-protocol/&#34;&gt;瘦客户端那些事 - 远程传输协议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.coderzh.com/2010/10/07/thinclient-secret-of-nomachine/&#34;&gt;瘦客户端那些事 - NoMachine的秘密&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，现在已经是 9102 年了，这些年云技术快速发展，渲染技术也层出不穷，随着之后 5G 网络的普及，也许解决云游戏延迟的问题是早晚的事了。&lt;/p&gt;
&lt;p&gt;除了 Google 高调宣布进入云游戏领域，腾讯也宣布和英特尔联手推出云游戏平台（https://start.qq.com/） ，还有微软的 xCloud 云游戏。第四天微软有个专场讲 xCloud 云游戏，和谷歌相比起来显得低调很多，甚至务实很多。xCloud 有个非常大的亮点是现有的主机游戏可以非常简单的移植到 xCloud 平台上来，似乎简单到只需要定义好游戏操作的 layout 布局即可。&lt;/p&gt;
&lt;p&gt;后面还听了个吹水课程，预测了 2021 年游戏领域的4大趋势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;5G reaches initial inflection point（5G 达到初始拐点）&lt;/li&gt;
&lt;li&gt;Gamer culture hits peak mainstream culture（玩家文化达到了主流文化的顶峰）&lt;/li&gt;
&lt;li&gt;AR is forecasted to overtake VR（预计AR将超过VR）&lt;/li&gt;
&lt;li&gt;eSports audiences will outnumber gamers（电子竞技的观众人数将超过游戏玩家）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你们对谷歌 Stadia 的 6 小时技术分享细节感兴趣，欢迎留言，也许下篇就重点讲讲了解到的一些 Stadia 技术细节了。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>GDC2019 小记（一）</title>
            <link>https://blog.coderzh.com/2019/03/30/gdc2019/1/</link>
            <pubDate>Sat, 30 Mar 2019 23:00:36 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2019/03/30/gdc2019/1/</guid>
            <description>&lt;p&gt;GDC(Game Developers Conference) 是一年一度全球性的游戏开发者盛会，期间有大量的游戏开发者的技术分享交流，同时还会有游戏展览，以及游戏奖项颁奖，比如独立游戏节，游戏开发者选择奖（Game Developers Choice Awards）。&lt;/p&gt;
&lt;p&gt;最早的一届 GDC 在 1988 年，当时出席的只有 27 人，之后一直发展，到今年的 GDC 2019，已经有接近 27000 人参加。由于人数众多，从 2007 年开始，GDC 大会都选择在旧金山的莫斯科尼中心（Moscone Center）举行。&lt;/p&gt;
&lt;p&gt;这是我第一次参加 GDC，也是第一次出行美国。所以，第一步当然是搞定美国签证。GDC 2019 的会议时间是 3月18日至 3月22日，当我接到通知去参加的时候已经 2月20日了，意味着我只有一个月不到的时间，需要搞定美国签证。一个更糟的情况是，我发现我的护照有效期已经不满 6 个月了，还得先办护照换发，后面还要预约面签等等。于是顿时对我能不能顺利出行产生了很大的怀疑，甚至对于不能出行还有点小遗憾。&lt;/p&gt;
&lt;p&gt;第一时间，我网上预约了广州出入境办理护照换发，填了资料，去照相馆照了相。第二天起了个大早，由于很久没有起那么早，当我走在小区路上时，竟然发现有这么多人已经出来活动，有散步的，有跑步健身的，也包括像我一样赶早出去办事的。早上的空气也是格外的清新，一切都像在刚刚苏醒的样子，于是竟在心里冒出&lt;strong&gt;盼望着，盼望着，东风来了，春天的脚步近了。
一切都像刚睡醒的样子，欣欣然张开了眼。山朗润起来了，水涨起来了，太阳的脸红起来了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;早上的风景原来这么美。从那天开始，我养成了早起的习惯。清晨的空气很好，一觉醒来后也一扫前一天的疲惫，精神气爽，重要的是，可以在这段时间里不受干扰的做自己的事。&lt;/p&gt;
&lt;p&gt;回到办护照换发。由于网上预约时已经填过资料，现场办理时不需要再填表格，现场办理效率非常高，但是如果要等护照邮寄过来，一般需要 8~10 个工作日，于是问工作人员能不能加急，得到的回答是可以，加急后只需要 3~5 个工作日，但是需要美国那边的邀请函。然而当时我还并未申请美国邀请函，所以也就不能加急。&lt;/p&gt;
&lt;p&gt;要再赞一下广州出入境的办事效率，即使没有加急，一周后（6个工作日）我就收到了新的护照。于是开始填在线的 ds160 表格，页面经常出现超时和莫名其妙的错误，还好可以中间保存，一路艰难的填好表格拿到确认页后，hr 帮忙预约了 3个工作日后的美签面试。&lt;/p&gt;
&lt;p&gt;面签顺利的话，还需要等领事馆寄回护照，一般也要 5~7 个工作日。所以，这次面签必须一次过，如果再约下次面签，将错过 GDC 的会议时间。于是开始练习英语口语，还发现了《潘吉Jenny告诉你》这样好的英语学习 Podcast 节目。&lt;/p&gt;
&lt;p&gt;面签前，我阅读了一些别人的面签经验，了解了一些常被问的问题。做为一个过来人，我想给需要去面签的同学提醒一点，去面签的时候，只带上必要的资料就好，背包、手机之类的最好不要带。因为从进入美领事馆大门开始，面签资料之外的东西都不能带进去，最快也要 1~2 个小时才能出来。如果没人帮忙保管背包，就得寄存在外面的报刊亭（还有路边的大妈，实在有点不放心）。&lt;/p&gt;
&lt;p&gt;进领事馆后，排队，安检，录指纹，然后开始面谈。我注意到一起排队面签的大都是旅游签证，还有不少中老年人，面谈时说的自然是中文，甚至还有只会粤语的，但都不影响拿到签证。我办的是商务签证，有公司背书，理论上会更容易一些。&lt;/p&gt;
&lt;p&gt;轮到我时，面试官是一位美国男士，面带笑容态度很好。打过招呼后，先用普通话问了我：『你也是去美国旅游吗？』我说不是，公司派我去美国参加一个会议，GDC 游戏开发者大会。然后问我会不会说英语，我说会一点，然后他就开始用英文提问了。问题大致都是攻略里提到的，诸如你的学历专业是什么（直接给他简历），去美国多长时间，是不是第一去美国，有没有亲戚朋友在美国，你家住哪里，有没有小孩，你的公司是干嘛的等等。最后一个问题，他问我：『你认为去年中国的经济是变好了，还是变差了？』&lt;/p&gt;
&lt;p&gt;亲爱的读者，这个问题你会怎么回答呢？最后，我顺利完成面谈，3天后就收到了寄来的护照（效率真高），拿到了 10 年的美国签证。然后开始定机票、酒店，提前了解美国的历史和风俗，熟悉 GDC 的议会行程，准备一周后的美国 GDC 之旅。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>C&#43;&#43; 的指定初始化器</title>
            <link>https://blog.coderzh.com/2019/02/24/cpp-designated-initializers/</link>
            <pubDate>Sun, 24 Feb 2019 21:01:02 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2019/02/24/cpp-designated-initializers/</guid>
            <description>&lt;p&gt;C99 开始支持了指定初始化器（Designated Initializers），用来方便的初始化结构体或者数组数据。&lt;/p&gt;
&lt;p&gt;比如下面的结构体：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Rect&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以这样初始化：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;n&#34;&gt;Rect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 x, y 未指定的话，会自动初始化为 0。花括号里的字段顺序也没有要求。如果要初始化一个全是 0 的结构体，可以这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;n&#34;&gt;Rect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Or
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Rect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;需要特别注意的是，第一种写法 &lt;code&gt;{0}&lt;/code&gt;，里的 0，并不是说每个字段都赋值成 0，而是说第一个字段赋值为 0，其余字段用默认值（刚好也是 0）。&lt;/p&gt;
&lt;p&gt;假如我们写成：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;n&#34;&gt;Rect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// r will be { 1, 0, 0, 0}, not {1, 1, 1, 1}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再来看看几个数组初始化的列子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Or
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Equals
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;甚至可以用 &lt;code&gt;[first...last]=value&lt;/code&gt; 来指定一个区间的值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Equals
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意 &lt;code&gt;[first...last]&lt;/code&gt; 是从 first 到 last 的闭区间。&lt;/p&gt;
&lt;p&gt;指定初始化甚至还可以嵌套，假如结构体定义是这样的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;typedef struct Point {
  int x;
  int y;
} Point;

typedef struct PointCloud {
  Point p[10];
  int width;
  int height;
} PointCloud;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以这样初始化 PointCloud:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;n&#34;&gt;Rect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，甚至可以写出像这样的代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void init_some(PointCloud* p) {
  // do some init
}

int main(int argc, char* argv[]) {

  init_some(&amp;amp;(PointCloud){
    .p[0] = {
      .x = 10,
      .y = 10
    },
    .width = 100,
    .height = 100
  });
  // ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;上面代码如果使用 C++ 编译，会报错：&lt;code&gt;error: taking the address of a temporary object of type &#39;PointCloud&#39; [-Waddress-of-temporary]&lt;/code&gt;，可以加编译参数 -Wno-address-of-temporary 解决。不过不是很推荐这么做，关掉这个可能会带来其他隐藏的 BUG。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的代码看上去已经不像 C 了，像是另外一门语言。但是简化了初始化的过程。&lt;/p&gt;
&lt;p&gt;好了，看上去非常酷，但前面的代码都是纯 C 的，那 C++ 支不支持指定初始化器呢？遗憾的是，直到 C++20 才开始支持指定初始化器（都什么年代了，别人家的 C，99 年就支持了）。&lt;/p&gt;
&lt;p&gt;如果在 linux 上用 gcc C++11 去编译上面的代码，会报下面的错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sorry, unimplemented: non-trivial designated initializers not supported
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也别太难过，好消息是作为现代编译器的 &lt;code&gt;clang&lt;/code&gt;，早早的就通过扩展的方式实现了指定初始化器。所以，即使是 C++11，使用 clang 编译和跑上面的代码，也是没有问题的。（Windows 的 MSVC 大概是指望不上了）&lt;/p&gt;
&lt;p&gt;回到移动平台，Android NDK 开发时，能不能使用这一特性呢？Android NDK r11 开始就建议大家从 GCC 切到 clang，而且从 NDK r13 开始，默认使用 clang 编译。所以，只要 NDK r13 及以上，都可以愉快的使用这一特性。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>我的 2018</title>
            <link>https://blog.coderzh.com/2019/02/23/my-2018/</link>
            <pubDate>Sat, 23 Feb 2019 15:50:19 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2019/02/23/my-2018/</guid>
            <description>&lt;p&gt;做为一年一度的年更文章，我觉得还是有必要写下。18 年过的真是一个快字，但仔细回想一下，中间还是发生很多事，最终凝结成两个字：感恩。&lt;/p&gt;
&lt;h3 id=&#34;读书&#34;&gt;读书&lt;/h3&gt;
&lt;p&gt;2018 年，买了两本纸质书《编程语言实现模式》、《编译原理（第2版）》。一方面，买的纸质书少了，原因是发现很多技术类书都可以从广州图书馆里借到，所谓书非借不能读也。另一方面，当时买这两本书是为了更深入的学习和研究 V8 JavaScript 引擎。因为新的开发岗位，需要大量和 V8 打交道，所以想研究的更深入一些。这一年，V8 相关研究了不少，之后有机会的话写个系列文章分享一下。但是遗憾的是，买的这两本书还并没有怎么翻，这也侧面说明了我研究的还不够深入吧，2019 年继续加油。&lt;/p&gt;
&lt;p&gt;图书馆借阅的技术类书包括：《WebKit技术内幕》、《Effective Javascript》、《深入实践C++模板编程》、《深入理解C++11》、《高级C/C++编译技术》、《WebGL编程指南》、《高性能JavaScript》、《C++性能优化指南》、《网络多人游戏架构与编程》、《HTML5动画创作技术：DragonBones》、《C++必知必会》、《C++之旅：英文版》、《ZeroMQ：云时代极速消息通信库》、《网络多人游戏架构与编程》等等。不足之处是书即使是借的也不一定真的读了。&lt;/p&gt;
&lt;p&gt;微信读书里真的看完的书有：《区块链：定义未来金融与经济新格局》、《OKR工作法：谷歌、领英等顶级公司的高绩效秘籍》、《快速阅读术》、《原则》、《蒙台梭利的早期教育》、《儿童教育心理学》、《硅谷之火：人与计算机的未来》、《AI迷航2：复活爱因斯坦》、《未来世界的幸存者》、《软技能：代码之外的生存指南》、《流浪地球》等等。&lt;/p&gt;
&lt;p&gt;总结一下就是，主动看书的时间很少，大部分是在地铁上被动看的微信读书。2019年希望能有更多的主动阅读时间，争取做到借阅的书看完再还。&lt;/p&gt;
&lt;h3 id=&#34;代码&#34;&gt;代码&lt;/h3&gt;
&lt;p&gt;2018 年在 GitHub 上的代码提交次数寥寥无几。gohugo.org 和 Q 群也几乎没有维护过。hugo-pacman-theme 主题也因为长期不维护，被移出了 Hugo 官方主题列表。这一年，写的主要是工作相关的代码，业余时间写代码的时间真的很少，19 年希望有所改善。&lt;/p&gt;
&lt;h3 id=&#34;工作&#34;&gt;工作&lt;/h3&gt;
&lt;p&gt;18 年初转岗到现在刚好一年，很快适应了新的岗位。非常庆幸去年做的选择，工作的内容更加聚焦，有趣，而且富有挑战，希望 19 年有更大的突破。&lt;/p&gt;
&lt;h3 id=&#34;锻炼&#34;&gt;锻炼&lt;/h3&gt;
&lt;p&gt;去年开始固定每周打乒乓球，买了专业的拍子，甚至小区里还有热心教练指导练球。后来春节期间中断了一段时间，现在准备继续打起来。佳明 Forerunner 235 找了很久也找到了，但是跑步很少，主要感觉跑步时间又长又无聊，相比起来，乒乓球真是不错的运动。&lt;/p&gt;
&lt;h3 id=&#34;全新出发&#34;&gt;全新出发&lt;/h3&gt;
&lt;p&gt;2018 有不足，也有惊喜。&lt;/p&gt;
&lt;p&gt;《动物世界》电影里有句台词：『该打的仗我已经打过了，该跑的路我也跑到了尽头，老子信的道老子自己来守。』&lt;/p&gt;
&lt;p&gt;2019，继续守自己的道，心态上全新出发，希望在更多方面能够有所突破，加油！&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Mac 上配置 VSCode 的 cquery 插件</title>
            <link>https://blog.coderzh.com/2018/10/14/cquery/</link>
            <pubDate>Sun, 14 Oct 2018 17:56:47 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2018/10/14/cquery/</guid>
            <description>&lt;p&gt;VSCode 已经成了我的主力编辑器，包括用来写 C++。虽然默认的 cpptools 插件已经很好用了，但 cquery 插件更加强大，极力推荐。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cquery-project/cquery&#34;&gt;cquery&lt;/a&gt; 是基于 LSP（Language-Server-Protocol）的。LSP 是微软推出的开源的语言服务器协定，语言服务端提供索引代码的服务，编辑器直接调用，用来实现语法补全及各种索引重构功能。&lt;/p&gt;
&lt;p&gt;cquery 就是其中一种 C/C++/Objective-C 的 language server。它的特点是速度非常非常的快，延迟特别低，它设计出来就是为了在大型的代码工程里也能很好的使用。比如 Chromium、V8 这样的大型工程。&lt;/p&gt;
&lt;p&gt;心动不如行动，赶紧折腾起来吧，以我的 Mac 为例：&lt;/p&gt;
&lt;h3 id=&#34;1-编译-cquery&#34;&gt;1. 编译 cquery&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/cquery-project/cquery.git --recursive
cd cquery
git submodule update --init
mkdir build &amp;amp;&amp;amp; cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=release -DCMAKE_EXPORT_COMPILE_COMMANDS=YES
make install -j8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;问题来了，最新的 cquery 默认依赖 clang 7.0.0，而我的 Mac 上是 6.0.0。所以上面的 cmake 命令执行后，会报下面的错：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;No SHA256 hash available for the current platform (Darwin) + clang version
  (6.0.0) combination.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;看了下 cquery 的编译脚本，解决方法也很简单，手工创建一个 6.0.0 的 SHA256 文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd cquery
echo 0ef8e99e9c9b262a53ab8f2821e2391d041615dd3f3ff36fdf5370916b0f4268 &amp;gt; clang_archive_hashes/clang+llvm-6.0.0-x86_64-apple-darwin.tar.xz.SHA256
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;再执行 cmake 会自动下载 clang+llvm-6.0.0-x86_64-apple-darwin.tar.xz。但是下载很慢，可以手工下载(&lt;a href=&#34;https://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-apple-darwin.tar.xz&#34;&gt;https://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-apple-darwin.tar.xz&lt;/a&gt;
)好，并解压到 build 目录，然后上面的命令就可以顺利的进行下去了。&lt;/p&gt;
&lt;p&gt;编译后的二进制会在 &lt;code&gt;release/bin&lt;/code&gt; 目录，稍后把路径填入 VSCode 的配置中。&lt;/p&gt;
&lt;h3 id=&#34;2-vscode-安装-cquery-插件&#34;&gt;2. VSCode 安装 cquery 插件&lt;/h3&gt;
&lt;p&gt;直接在 VSCode 里搜 cquery 插件安装即可。然后在 VSCode 里设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;cquery.launch.command&amp;quot;: &amp;quot;/absolute/path/to/cquery/release/bin/cquery&amp;quot;,
    &amp;quot;cquery.cacheDirectory&amp;quot;: &amp;quot;/User/your-name/.cquery-cache/&amp;quot;,
    &amp;quot;cquery.completion.include.blacklist&amp;quot;: [&amp;quot;.*/.vscache/.*&amp;quot;, &amp;quot;/tmp.*&amp;quot;, &amp;quot;build/.*&amp;quot;],
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其他相关设置，可参考一下（关掉 cpptools 相关设置）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;C_Cpp.autocomplete&amp;quot;: &amp;quot;Disabled&amp;quot;,
  &amp;quot;C_Cpp.formatting&amp;quot;: &amp;quot;Disabled&amp;quot;,
  &amp;quot;C_Cpp.errorSquiggles&amp;quot;: &amp;quot;Disabled&amp;quot;,
  &amp;quot;C_Cpp.intelliSenseEngine&amp;quot;: &amp;quot;Disabled&amp;quot;,
  &amp;quot;editor.autoClosingBrackets&amp;quot;: &amp;quot;never&amp;quot;,
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-生成-compile_commandsjson&#34;&gt;3. 生成 compile_commands.json&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;compile_commands.json&lt;/code&gt; 文件是 cquery 用来索引你的代码工程所需要的。它可以从 cmake 里直接生成出来，只需要在 cmake 的编译参数里加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-DCMAKE_EXPORT_COMPILE_COMMANDS=YES
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后把生成的 compile_commands.json 拷到工程的根目录。&lt;/p&gt;
&lt;h3 id=&#34;4-可以开心愉快的玩耍了&#34;&gt;4. 可以开心愉快的玩耍了&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;http://image.coderzh.com/cquery.png&#34; alt=&#34;cquery&#34;&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>短内容博客</title>
            <link>https://blog.coderzh.com/2018/10/13/short/</link>
            <pubDate>Sat, 13 Oct 2018 22:25:11 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2018/10/13/short/</guid>
            <description>&lt;p&gt;之前定的一个月写一篇博客还是没有做到，想来主要是以下几个原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;带娃&lt;/li&gt;
&lt;li&gt;下班了就想放松一下，玩玩游戏（王者荣耀、刺激战场）&lt;/li&gt;
&lt;li&gt;写长内容太费时间精力&lt;/li&gt;
&lt;li&gt;没什么内容可写&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;今天看了下我的公众号关注人数已经几乎3000人，但更新频率几乎是一年一篇。我的博客应该没多少人看，所以写的随意些吧，比如看上去像没有写完的短内容文章，也通通发上来罢！&lt;/p&gt;
&lt;p&gt;写点短内容，相对比较轻松一些，同时也能记录到一些想法。某些时刻，写着写着，也许文思泉涌写出来一篇长文，也是有可能的。&lt;/p&gt;
&lt;p&gt;今天就到这里，期待以后有所改变。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>读一本书，只为邂逅那一句</title>
            <link>https://blog.coderzh.com/2018/03/11/readbook/</link>
            <pubDate>Sun, 11 Mar 2018 22:36:27 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2018/03/11/readbook/</guid>
            <description>&lt;p&gt;『读一本书，只为邂逅那一句』，是我从《快速阅读术》里读来最深的一句感悟。&lt;/p&gt;
&lt;p&gt;书的作者是一名专业的书评人，每年阅读的书数量达到 700本。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>带娃的一点心得</title>
            <link>https://blog.coderzh.com/2018/03/04/education/</link>
            <pubDate>Sun, 04 Mar 2018 22:17:48 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2018/03/04/education/</guid>
            <description>&lt;ol&gt;
&lt;li&gt;不欺骗&lt;/li&gt;
&lt;li&gt;讲原则，说到做到&lt;/li&gt;
&lt;li&gt;正向引导，不说反话&lt;/li&gt;
&lt;li&gt;不轻易打断，保护专注力&lt;/li&gt;
&lt;li&gt;认真陪他玩，不玩手机&lt;/li&gt;
&lt;li&gt;鼓励各种探索尝试，只要确保没有危险&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
        <item>
            <title>我的 2017</title>
            <link>https://blog.coderzh.com/2018/02/25/my-2017/</link>
            <pubDate>Sun, 25 Feb 2018 00:15:00 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2018/02/25/my-2017/</guid>
            <description>&lt;p&gt;2017 总结：写了一篇博客，发了一篇公众号。完。&lt;/p&gt;
&lt;p&gt;为什么写的少了，如果说因为带娃太忙没有时间，都是借口，时间挤一挤总会有的。这一年，我看了一些书，学了一些东西，做了一些决定，每次想写点东西又不知为何总是没有做到。也许是懒了，也许是浮躁了，因为写东西太花时间了。我写作速度不快，简单的几句话总是要反复斟酌。所以想着还不如把时间用来学习更深入的东西，写更多的代码。结果也看到了，深入的东西没有学到多少，代码没写多少，同时，文章也一篇没有写。&lt;/p&gt;
&lt;p&gt;所以看来，把写作的时间腾出来学习对我来说是个伪命题。最近在看《快速阅读术》，里面就提到了『呼吸』式阅读，即不能只看（吸气），还要写下来（呼气），这样能减轻阅读的负担，还能帮助吸收理解。所以，希望之后我能尽量多写吧，就算写的内容对别人没什么帮助，至少可以写给自己。&lt;/p&gt;
&lt;h3 id=&#34;读书&#34;&gt;读书&lt;/h3&gt;
&lt;p&gt;这一年，我买了好多纸质书，已经堆满了我的桌子。主要是技术类的书籍：《Hadoop权威指南》（影印版，没看），人工智能类书籍：《神经网络与深度学习》、《TensorFlow实战》、《图解机器学习》、《程序员的数学1,2,3》、《高等数学上下册》、《深度学习》、《机器学习》（西瓜书），编程语言类：《Go语言实战》、《Kotlin实战》、《Javasript权威指南》，游戏渲染相关：《WebGL编程指南》、《OpenGL ES 3.0编程指南》、《OpenGL超级宝典》、《OpenGL编程指南》&lt;/p&gt;
&lt;p&gt;首先说说人工智能，自 AlphaGO 先后击败人类顶级围棋选手李世石、柯洁，可以说 AI 大热。整个业界、整个公司都掀起了一股学习 AI 的热潮。为了搞清楚机器学习、深度学习到底是个什么东西，我投入了不少的精力，最后我觉得也算是简单的入门了，更高深的就不敢说。&lt;/p&gt;
&lt;p&gt;从零开始学习机器学习，一开始我感到很吃力。大家都知道学习一门编程语言时，都会先学习 Hello World 怎么写。最让人受打击的是，一开始学习的房价预测这个 HelloWord 级别的线性模型时，就让我倍感吃力。突然感觉数学知识不够用了，然后找来《高等数学》把卡住的几个概念温习了一遍，然后在脑子里不停的想那个梯度下降到底是个什么东西。我又找来 Andrew Ng 的视频，然后继续想这个东西的本质是什么。&lt;/p&gt;
&lt;p&gt;某天突然就想明白了，就是设计了一个模型，然后通过求导，不断迭代，将预期值和实际值的误差降到最小，然后把模型的参数计算出来的一个过程。而且，如果你使用 TensorFlow 之类的框架的话，甚至求导和梯度下降都不需要你来做了，直接一个 API 搞定了。之后深度学习相关的一些模型、CNN、聚类算法等等，也有了概念性的直观理解。知道大概是怎么回事，虽然没有太多的动手实践。然后发现，原来写个手写数字识别的程序也是这么简单的事情。最后我极力推荐李宏毅老师关于 Deep Learning 的课程，去 YouTube 搜下就有了。这是我看过的讲的最生动、最通俗易懂，同时讲的也很透彻的课程了（嗯，不用谢）。&lt;/p&gt;
&lt;p&gt;17 年底，微信上线了『小游戏』。为了职业生涯的转型，我突击了一下游戏渲染相关的知识。之前做游戏开发时，主要做的是游戏逻辑、UI、后台相关的开发，对渲染引擎这块感觉专业性太强，有点敬而远之。这次沉下心来学习，感觉自己的知识体系又打开了一扇门。&lt;/p&gt;
&lt;p&gt;除了技术类的书，我都首选看电子版了。主要是在微信读书和 Kindle 上看。读过的有印象的书罗列一下：《腾讯传》、《如何高效学习》、《教父》三部曲、《摩根写为儿子的32封信》、《人民的名义》、《刻意练习》、《富爸爸穷爸爸》、《股票大作手回忆录》、《从20万到30亿：特朗普自传》 等等。&lt;/p&gt;
&lt;p&gt;印象最深刻的是《教父》和《富爸爸穷爸爸》。教父讲的其实是一个在外打拼，为了给家里人更好生活，但被形势所迫，一步一步成为黑帮老大的故事。它讲的其实是作为男人对家庭的责任感。教父不管在外面要忍受什么，做多么危险的事，在家时从不在家人面前讨论工（砍）作（人）。他所做的一切，都是为了保护他的家人。反复刷教父电影三部曲还不过瘾，又拿书来刷。惊喜的是书里的第二部和第三部是另外单独的故事，特别是第二部关于吉利安诺的故事。印象最深的是他被枪击后顿悟的那段，特别的精彩，很好奇为啥没有拍成电影。&lt;/p&gt;
&lt;p&gt;《富爸爸穷爸爸》也是很老的书了，看完之后才发现我就是书里提到的财商很低的人啊。原来谈钱并不是那么让人羞耻的事情，特别是程序员，跳槽谈钱时，总是感觉扭扭捏捏难为情，其实大可不必。首先我们要端正对钱的态度，我们追求金钱，是为了改善和保障家人的生活。其次，我们要学习怎样赚钱，怎样让钱为我工作，而不是我为钱工作，最终走上快车道，实现财务自由。这本书早在 2000 年左右就出了，如果当时就看了并且砸锅卖铁投资房地产，现在不就发了吗。当然，开始投资从来都不晚，机会到处都是，就看你能不能看准了。&lt;/p&gt;
&lt;h3 id=&#34;代码&#34;&gt;代码&lt;/h3&gt;
&lt;p&gt;2017 年我在 GitHub 上的代码提交次数只有 30 几次，可以忽略不计了。这里特别要提下 Go 的静态网站生成器 Hugo，从我最早使用时的 v0.1 几版本，到现在已经到了 v0.36 版本。开源社区的项目就像一个大轮子，单位时间内虽然不是速度最快，但是不断有人参与进来推动轮子前进，不知不觉之间，已经前进了很多很多。新版本不断在改进完善，旧的过时功能不断被修正和删除，以至于之前我写的几个主题被迫进行了几次升级，以支持新版的 Hugo。&lt;/p&gt;
&lt;p&gt;就在我兴致勃勃打算写这篇文章时，才发现使用最新版 Hugo 生成我的博客页面时，所有文章列表相关的页面都生成不出来了。于是我用了一个晚上的时间去查原因，看 Hugo 的更新文档，最后解决好之后已然夜深人静了。&lt;/p&gt;
&lt;p&gt;之前我在用 Cocos2d-x 写游戏时也有这种感悟。某天突然心血来潮想写个小游戏玩玩，然后发现 Cocos2d-x 又更新了好几个版本，加了好多内容。等我更新完 SDK，看过更新的内容之后，写游戏这件事本身却被抛在了脑后。等哪天突然又想起来，发现 SDK 又更新了，周而复始。我写游戏的速度，已经赶不上游戏引擎更新的速度了。&lt;/p&gt;
&lt;p&gt;所以，我的一个感悟是，这个世界正在以你难以想象的速度在向前发展，不管你看得见还是看不见。所以你一定要保持前进，保持进步，不然等你回过神来，会发现已经被远远的抛在后面。&lt;/p&gt;
&lt;h3 id=&#34;重点&#34;&gt;重点&lt;/h3&gt;
&lt;p&gt;没错，前面说的都不重要。保持身体健康，心情愉快，家庭和谐才是最重要的。所以，2018 年的一个小目标是：坚持锻炼身体。对了，去年买的佳明 Forerunner 235 手表不知道放哪里去了，我要去找找了，再见。&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>我的 2016</title>
            <link>https://blog.coderzh.com/2017/01/01/my-2016/</link>
            <pubDate>Sun, 01 Jan 2017 00:00:00 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2017/01/01/my-2016/</guid>
            <description>&lt;p&gt;&lt;img src=&#34;http://image.coderzh.com/baseball.JPG&#34; alt=&#34;baseball&#34;&gt;&lt;/p&gt;
&lt;p&gt;光阴似箭，岁月如梭，仿佛去年写「我的 2015」就在昨日，然而时间的确在滴滴答答中度过了 365 天。这一年里，经历了一些事，读了一些书，努力过，收获过，感恩 2016。&lt;/p&gt;
&lt;h4 id=&#34;公众号&#34;&gt;公众号&lt;/h4&gt;
&lt;p&gt;其中一个变化是，我的公众号（博客）的更新频率越来越低了。2016 年我总共写了 20 多篇文章，平均算下来，2 周才有 1 篇。相比去年的 1 周 1 篇少了不少。&lt;/p&gt;
&lt;p&gt;这其中有几个原因，首先，工作占据了我更多的时间。有的时候为了解决问题，不可避免的把工作带回了家。其次，随着小孩的长大，周末需要花更多的时间带小孩，陪家人。第三，见识了越多优秀的人，越发现自己的无知，与其为了 1 周 凑上 1 篇，还不如多沉下心学习，做些更深入的研究，多读点书，多写点代码，多存点干货再来分享。第四，还是因为懒。&lt;/p&gt;
&lt;h4 id=&#34;读书&#34;&gt;读书&lt;/h4&gt;
&lt;p&gt;2016 年，我读了以下书：《必然》、《MacTalk 跨越边界》、《7 Eleven零售的哲学》、《改变未来的九大算法》、《重来》、《马克·扎克伯格传》、《硅谷钢铁侠：埃隆·马斯克》、《途客圈创业记》、《福特自传》、《人类简史：从动物到上帝》、《Google 重新定义公司》、《Android 软件安全与逆向分析》、《第二次机器革命》、《接纳不完美的自己》、《黑客》、《成为乔布斯》……&lt;/p&gt;
&lt;p&gt;其中的《人类简史》开阔了我的思维认识，也是张小龙极力推荐的。但对我的思维改变最大的，是《接纳不完美的自己》这本书。书中提到一个形象的比喻：每个人刚出生时内心都有一座很大的城堡，城堡里有很多的房间，各式各样的房间，每个房间代表一种特质，比如：善良、勇敢、正直、激情，当然也包括了：自私、胆小、愚蠢，奸诈等不好的特质。开始每扇门都是对外敞开的。随着慢慢的长大，你去了别人的城堡，发现有些不好的特质是别人没有的（或许是被藏起来了），于是你把不好特质的门锁上，不让别人进去，甚至是自己。慢慢的，越来越多的门被锁上，偌大的一座城堡，最后你只能在很少的房间活动。&lt;/p&gt;
&lt;p&gt;那些被锁上的房间，正是不完美的自己。有些人选择把锁住的房间遗忘，而一旦发现别人表现出不好的特质，则会异常的激动和排斥。比如，你认为某个人非常的小气，甚至为此感到不齿，其实恰恰说明了你自己正是一个小气之人。因为你害怕别人说你小气，于是小气之门被你严严锁死，一旦你发现某个人表现出小气的特质时，你就会异常的激动，拼命的表现出不齿的感觉以和小气撇清关系。&lt;/p&gt;
&lt;p&gt;所以，接纳不完美的自己，第一步是把自己内心深处的房间打开。每当你觉得别人怎么怎么样时，你越是激动，越要想一想，我是不是越是一样，只是我把门锁上了(直白一点：你越认为别人笨，其实越是你笨。你越是认为别人心机婊，其实你越是心机婊)。于是你会对别人的缺点更加宽容，也能更好的反思自我。第二步是必要时利用你的缺点。比如有人要非法拆迁你的房子，你是不是表现的无赖一些反而会更好。&lt;/p&gt;
&lt;h4 id=&#34;代码&#34;&gt;代码&lt;/h4&gt;
&lt;p&gt;写代码依然是一件非常有意思的事情。2016 年的一个重大变化是，我的开发环境已经全面转向了 Mac。我深刻的感受到了《成为乔布斯》书中提到的乔布斯对艺术和美的追求。一句话：用更好看的 Mac，写代码不折腾。&lt;/p&gt;
&lt;p&gt;编程语言方面，Go 和 Swift 走马观花了一下，node.js 有初步涉及。主力语言还是 Python 和 C++，有时也会被老板用枪指着写点 Java。&lt;/p&gt;
&lt;p&gt;机器学习粗浅了解，还未入门，来年要加大学习投入。&lt;/p&gt;
&lt;p&gt;从 GitHub 统计的我过去一年的贡献活跃度可以看出，下半年开始，我变得非常的不活跃，来年争取填满更多的格子。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.coderzh.com/github2016.png&#34; alt=&#34;github2016&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;工作&#34;&gt;工作&lt;/h4&gt;
&lt;p&gt;依然认为是最棒的公司。来年继续加油。&lt;/p&gt;
&lt;h4 id=&#34;不足&#34;&gt;不足&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;公众号（博客）写少了。&lt;/li&gt;
&lt;li&gt;GitHub 代码写少了。&lt;/li&gt;
&lt;li&gt;运动少了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;展望&#34;&gt;展望&lt;/h4&gt;
&lt;p&gt;好的习惯继续发扬，不足要改掉，健身的重要性要提高一个 Level。&lt;/p&gt;
&lt;h4 id=&#34;最后&#34;&gt;最后&lt;/h4&gt;
&lt;p&gt;感谢你们！如此低的更新频率下还没有退订，感谢！Happy 2017!&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>真正的黑客</title>
            <link>https://blog.coderzh.com/2016/10/16/real-hacker/</link>
            <pubDate>Sun, 16 Oct 2016 21:55:45 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://blog.coderzh.com/2016/10/16/real-hacker/</guid>
            <description>&lt;p&gt;当听到「黑客」一词时，你的第一反应是什么？是行为古怪，专门通过计算机干坏事的坏蛋，还是深藏不漏令人敬仰的技术大神。我们从小形成的固有观点认为，黑客等同于坏蛋，是具有贬义的。但在《黑客与画家》一书中，作者认为黑客是被称为书呆子，技术出众而且富有创造力，做着改变世界的一群人。&lt;/p&gt;
&lt;p&gt;如果想更深入了解「黑客」一词的起源，就得从《黑客》这本书看起。《黑客》一书中，绘声绘色的描述了世界上第一批黑客的诞生，他们从哪里来，具备什么特点，他们想干些什么。&lt;/p&gt;
&lt;p&gt;第一批真正的黑客，出现在 20 世纪 50~60 年代的 MIT。在那个年代，计算机还是价值数百万美元的庞然大物。IBM 704 需要占据整整一间房子，始终由一队专业的机器操作员看管，需要专用的空调，以免机器内部过热而烧坏。所以，计算机是极其稀缺的资源，每个人只能轮流安排有限的时间上机。MIT 的黑客们对计算机有种天生的狂热，他们为了有更多的上机时间，在机房蹲守，尽可能占用那些没来的同学的上机时间。一到深夜，他们撬开机房的锁，尽情的使用计算机。&lt;/p&gt;
&lt;p&gt;既然计算机资源如此珍贵，大家都认为应该让计算机干一些高大上的事情。但 MIT 的黑客们完全不吃这一套。彼得·萨姆森整晚都在编写一个即时将阿拉伯数字转换成罗马数字的程序，别人很难理解这有什么意义。萨姆森彻夜编写能演奏音乐的程序，别人不能理解，为什么要用这台 300 万美元的机器，去完成一个价值 5 美元的玩具钢琴就能完成的小事。&lt;/p&gt;
&lt;p&gt;从 IBM 704 到 TX-0 再到 PDP-1、PDP-6，他们追求用最少的汇编语句实现功能，他们称之为「正确答案」。他们擅自拆开价值昂贵的计算机，将指令解码器 add 线和 store 线的二极管相连，只为给计算机增加一条新的「累加至内存」的汇编指令，而当时哪怕私自更换打字机的墨带也会被永远的驱逐出去。&lt;/p&gt;
&lt;p&gt;他们研究高精尖的 AI 领域，教计算机下国际象棋。&lt;/p&gt;
&lt;p&gt;他们控制机械手臂，自动捡起抛过去的物体。&lt;/p&gt;
&lt;p&gt;他们设计制造自动打乒乓球的机器人。&lt;/p&gt;
&lt;p&gt;他们在 PDP-6 上移植了 LISP 语言。&lt;/p&gt;
&lt;p&gt;他们编写《太空大战》游戏。&lt;/p&gt;
&lt;p&gt;他们对现有的分时操作系统不满意，自己实现了不兼容分时系统（ITS）。&lt;/p&gt;
&lt;p&gt;他们痴迷于《LIFE》游戏。&lt;/p&gt;
&lt;p&gt;他们信奉的黑客道德是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对计算机的访问应该是不受限制的、完全的。任何人都有动手尝试的权利！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;他们把《太空大战》游戏的纸带放在抽屉里，任何人都可以打开它，阅读代码，优化代码，修改代码，然后再放回抽屉。这个抽屉不就是现在的 github 吗？然而他们更甚，他们相信黑客道德，相信每个使用计算机的黑客都会尊重别人的成果，分享自己的代码，不会随便删除别人的代码。他们设计的 ITS 操作系统居然是没有账号密码的，任何人都可以随意访问他人的文件！&lt;/p&gt;
&lt;p&gt;他们追求完美，不擅于和妹子沟通，一名 PDP-6 黑客在将近 20 年后依旧如此评论：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;即使在今天，女性也被认为是完全难以预测的。一个黑客怎么能够容忍这样一种不完美的存在呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;别人认为他们有社交障碍，其实真相却是如大卫·塞维亚所说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于这些人来说，似乎必须非常才华横溢，并且从某种意义上讲，他们需要在社交方面有所障碍，这样，他们才能完全集中精力做一件事情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1972 年阿波罗 17 号登月旅行之日，高斯珀作为实验室黑客的一份子受邀来到「科学游轮」近距离观看太空飞船发射，船上挤满了科幻小说作家、未来学者、科学家、评论员。开始时，高斯珀还对此不屑一顾。当火箭发射时，能量冲击波近在咫尺时，他的衬衫紧紧贴在胸口，口袋里的零钱叮当作响，PA 系统的扬声器从观景台的托架上掉落，悬挂在电源线上摇摇晃晃。&lt;/p&gt;
&lt;p&gt;阿波罗 17 号，这艘如果没有计算机就不可能如此真实地发射的火箭直冲云霄，快速地飞向浩瀚宇宙。火箭发射的景象给高斯珀带来了深刻的影响。他看到了现实世界在下定决心之后能够创造出怎样令人赞叹的奇迹。美国宇航局并没有遵循黑客道德，但是却实现了实验室倾其所有也不可能实现的事情。从某种意义上讲，他们这些黑客在欺骗自己，使用能力有限的机器工作，但却依然尝试着实现全部的事情，让自己在这间实验室里改变整个世界。这是第一代黑客的反思。&lt;/p&gt;
&lt;p&gt;不可否认的是，他们聪明绝顶，才华横溢，他们推动了计算机的发展，最终让计算机走进了千家万户，真正的改变了世界。&lt;/p&gt;
&lt;p&gt;思考：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我第一次接触计算机时的感受是怎样的？&lt;/li&gt;
&lt;li&gt;我把编程视为狂热的爱好，还是仅仅为了谋求一份工作？&lt;/li&gt;
&lt;li&gt;我们现在拥有比以往黑客都要好的计算机资源，为何做不出一件改变世界的事情？&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
